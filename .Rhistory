library("RcmdrMisc", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
help(demo)
q()
data<-cbind(c(1,2),c(3,4))
data.rowsum<-apply(data,1,sum)
data.colsum<-apply(data,2,sum)
datalap<-lapply(data,2,sum)
require(stats); require(graphics)
x <- list(a = 1:10, beta = exp(-3:3), logic = c(TRUE,FALSE,FALSE,TRUE))
lapply(x, mean)
lapply(x, quantile, probs = 1:3/4)
sapply(x, quantile)
i39 <- sapply(3:9, seq)
sapply(i39, fivenum)
vapply(i39, fivenum,
c(Min. = 0, "1st Qu." = 0, Median = 0, "3rd Qu." = 0, Max. = 0))
i39
v <- structure(10*(5:8), names = LETTERS[1:4])
v
f2 <- function(x, y) outer(rep(x, length.out = 3), y)
f2
(a2 <- sapply(v, f2, y = 2*(1:5), simplify = "array"))
a.2 <- vapply(v, f2, outer(1:3, 1:5), y = 2*(1:5))
stopifnot(dim(a2) == c(3,5,4), all.equal(a2, a.2),
identical(dimnames(a2), list(NULL,NULL,LETTERS[1:4])))
a.2
qbirthday(prob = 0.5, classes = 365, coincident = 2)
qbirthday(prob = 0.75, classes = 365, coincident = 2)
qbirthday(prob = 0.25, classes = 365, coincident = 2)
qbirthday(prob = 0.5, classes = 365, coincident = 3)
pbirthday(n, classes = 365, coincident = 2)
pbirthday(10, classes = 365, coincident = 2)
pbirthday(100, classes = 365, coincident = 2)
pbirthday(50, classes = 365, coincident = 2)
pbirthday(20, classes = 365, coincident = 2)
pbirthday(30, classes = 365, coincident = 2)
pbirthday(40, classes = 365, coincident = 2)
pbirthday(40, classes = 366, coincident = 2)
qbirthday(classes = 30, coincident = 3)
qbirthday(classes = 10^4)
qbirthday(coincident = 3, prob = 0.9)
heads<-rbinom(10^5,100,0.5)
hist(heads)
heads<-rbinom(10^5,10,0.5)
hist(heads)
heads<-rbinom(10^5,1000,0.5)
hist(heads)
heads<-rbinom(10^7,1000,0.5)
hist(heads)
heads<-qbinom(10^7,1000,0.5)
hist(heads)
heads
qbinom(0.5, 1000, lower.tail = TRUE, log.p = FALSE)
qnorm(0.6)
qnorm(0.9)
qnorm(0.95)
qnorm(0.975)
qbinom(0.975, 1000, lower.tail = TRUE, log.p = FALSE)
qbinom(0.975, 1000, 0.5)
qbinom(0.975, 100, 0.5)
qlbinom(0.975, 100, 0.5)
qlnorm(0.975)
numclaims<-rpois(1000,4)
mean(varclaims)
mean(numclaims)
var(numclaims)
hist(numclaims)
numclaims<-rpois(100000,4)
hist(numclaims)
numclaims<-rpois(100000,40)
hist(numclaims)
str(numclaims)
head(numclaims)
class(numclaims)
library(MASS)
head(Insurance)
tail(Insurance)
install.packages(c("MatchIt", "Matching", "party", "multilevelPSA", "PSAgraphics", "rpart", "rbounds", "TriMatch"))
################################################################################
## Install packages
install.packages(c('devtools','ggplot2','granova','granovaGG','gridExtra',
'Matching','MatchIt','party','PSAgraphics','rbounds','rpart'),
repos='http://cran.r-project.org')
# Both the multilevelPSA and TriMatch packages are available on CRAN, but we
# will install the latest versions from Github.
devtools::install_github('multilevelPSA', 'jbryer')
devtools::install_github('TriMatch', 'jbryer')
devtools::install_github('PSAboot', 'jbryer')
# The pisa package is a large (~80MB) data package. It is required to reproduce
# the full international analysis of private and public schools in the
# multilevelPSA package. Alternatively, the North American data is included in
# the multilevelPSA package. See demo(pisa)
# devtools::install_github('pisa', 'jbryer')
################################################################################
## Load packages and data
require(ggplot2)
require(granova)
require(granovaGG)
require(Matching)
require(MatchIt)
require(party)
require(PSAgraphics)
require(rbounds)
require(rpart)
require(multilevelPSA)
require(tree)
require(TriMatch)
require(PSAboot)
data(lalonde, package='Matching')
data(lindner, package='PSAgraphics')
str(lalonde)
str(lindner)
load("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
## Phase I
## Using logistic regression for estimating propensity scores
rdwv4ana4_dm.arm <- del_th+relig_cat2+paritycat+heducat+woeducat+woagecat+assetv1
arm.glm <- glm(rdwv4ana4_dm.arm, family=binomial, data=lalonde)
summary(arm.glm)
## Phase I
## Using logistic regression for estimating propensity scores
rdwv4ana4_dm.arm <- del_th+relig_cat2+paritycat+heducat+woeducat+woagecat+assetv1
arm.glm <- glm(rdwv4ana4_dm.arm, family=binomial, data=rdwv4ana4_dm)
summary(arm.glm)
## Phase I
## Using logistic regression for estimating propensity scores
rdwv4ana4_dm.arm <- del_th + relig_cat2+paritycat+heducat+woeducat+woagecat+assetv1
arm.glm <- glm(rdwv4ana4_dm.arm, family=binomial, data=rdwv4ana4_dm)
summary(arm.glm)
## Phase I
## Using logistic regression for estimating propensity scores
rdwv4ana4_dm.arm <-arm ~ del_th + relig_cat2+paritycat+heducat+woeducat+woagecat+assetv1
arm.glm <- glm(rdwv4ana4_dm.arm, family=binomial, data=rdwv4ana4_dm)
summary(arm.glm)
?stepAIC
ps <- fitted(arm.glm)  # Propensity scores
Y  <- rdwv4ana4_dm$preterm_bth  # Dependent variable
Tr <- rdwv4ana4_dm$arm # Treatment indicator
hist(ps)
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
summary(rr) # The default estimate is ATT here
ls(rr)
rr2 <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=TRUE, replace=TRUE, estimand='ATT')
summary(rr2) # The default estimate is ATT here
length(unique(rr2$index.control))
length(unique(rr$index.control))
ls(rr2)
tabulate(Y)
tabulate(factor(Y))
table(rdwv4ana4_dm.arm, rdwv4ana4_dm.preterm_bth)
table(rdwv4ana4_dm$arm, rdwv4ana4_dm$preterm_bth)
class(tab <- xtabs(Freq ~ ., rdwv4ana4_dm$arm))
class(tab <- xtabs(Freq ~ ., rdwv4ana4_dm$arm+rdwv4ana4_dm$preterm_bth))
class(tab <- xtabs(Freq ~  rdwv4ana4_dm$arm+rdwv4ana4_dm$preterm_bth))
with(rdwv4ana4_dm,
table(arm, preterm_bth, useNA = "ifany"))
plot(arm~preterm_bth, data=rdwv4ana4_dm)
df[1:3]
df[1:3,]
df[c(1:3),]
subset(rdwv4ana4_dm,Y~= "NA")
subset(rdwv4ana4_dm,Y==0, Y==1)
subset(rdwv4ana4_dm,primi==0)
with(rdwv4ana4_dm,
table(arm, preterm_bth, useNA = "ifany"))
with(subset(rdwv4ana4_dm,primi==0)
table(arm, preterm_bth, useNA = "ifany"))
with(rdwv4ana4_dm,
table(arm, preterm_bth, useNA = "ifany"))
with(rdwv4ana4_dm,
+ subset(rdwv4ana4_dm,primi==0)
+ table(arm, preterm_bth, useNA = "ifany")
)
install.packages(c("digest", "GGally", "jsonlite", "manipulate", "mgcv", "nlme", "plotrix", "RColorBrewer", "RCurl", "reshape2"))
rr <- Matchip-\[+}(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
summary(rr) # The default estimate is ATT here
ls(rr)
rr <- Matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = rdwv4ana4_dm)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = rdwv4ana4_dm)
library("MatchIt", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("Matching", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
library("TriMatch", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = rdwv4ana4_dm)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = subset(rdwv4ana4_dm,primi==0))
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = subset(rdwv4ana4_dm,primi==0), useNA = "ifany")
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = subset(rdwv4ana4_dm,primi==0), na.rm = FALSE)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = subset(rdwv4ana4_dm,primi==0), na.rm = TRUE)
comp_data<-subset(rdwv4ana4_dm,primi==0)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = comp_data, na.rm=TRUE)
sum(rr)
comp_data<-na.omit(comp_data)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = comp_data, na.rm=TRUE)
comp_data<-subset(rdwv4ana4_dm,primi==0,na.omit(arm del_th  relig_cat2  paritycat heducat woeducat woagecat assetv1)
comp_data<-subset(rdwv4ana4_dm,primi==0,na.omit(arm)
)
comp_data<-subset(rdwv4ana4_dm,primi==0,na.omit(arm, del_th,  relig_cat2,  paritycat, heducat, woeducat, woagecat, assetv1)
)
comp1_data<-subset(rdwv4ana4_dm,primi==0,na.omit(arm, del_th,  relig_cat2,  paritycat, heducat, woeducat, woagecat, assetv1)
)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = comp_data)
del_th
View(rdwv4ana4_dm)
del_th
c<-del_th
c<-rdwv4ana4_dm$del_th
tabulate c
rr <- matchit(rdwv4ana4_dm$arm ~ rdwv4ana4_dm$del_th + rdwv4ana4_dm$relig_cat2 + rdwv4ana4_dm$paritycat+ rdwv4ana4_dm$heducat +rdwv4ana4_dm$woeducat+ rdwv4ana4_dm$woagecat + rdwv4ana4_dm$assetv1)
rr <- matchit(rdwv4ana4_dm$arm ~ rdwv4ana4_dm$del_th + rdwv4ana4_dm$relig_cat2 + rdwv4ana4_dm$paritycat+ rdwv4ana4_dm$heducat +rdwv4ana4_dm$woeducat+ rdwv4ana4_dm$woagecat + rdwv4ana4_dm$assetv1data = rdwv4ana4_dm)
debug
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = comp_data)
debug
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, data = rdwv4ana4_dm)
rr <- matchit(arm ~ del_th + relig_cat2 + paritycat+ heducat + woeducat + woagecat + assetv1, data = rdwv4ana4_dm)
Y  <- rdwv4ana4_dm$preterm_bth  # Dependent variable
Tr <- rdwv4ana4_dm$arm # Treatment indicator
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT',as.real)
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT', na.rm=TRUE)
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT', na.rm=TRUE)
arm.glm <- glm(Y~TR
, family=binomial, data=rdwv4ana4_dm)
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT', na.rm=TRUE)
arm.glm <- glm(Y~Tr
, family=binomial, data=rdwv4ana4_dm)
p1 <- fitted(arm.glm)
hist(p1)
[0]
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT', na.rm=TRUE)
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
arm.glm <- glm(Y~Tr, family=binomial, data=rdwv4ana4_dm)
arm.glm <- glm(Y~Tr, family=binomial, data=rdwv4ana4_dm, model=TRUE)
summary(arm.glm)
anova(arm.glm)
rr <- Match( Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
rr <- Match( Tr=Tr, X=ps, M=1,  replace=FALSE, estimand='ATT')
rr <- Match(Y=Y, Tr=Tr, Z=del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
rr <- Match(Y=Y, Tr=Tr, del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
rr <- Match(Y=Y, Tr=Tr,  relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
rr <- Match(Y=Y, Tr=Tr, del_th + relig_cat2 + paritycat+ heducat +woeducat+ woagecat +assetv1, M=1, ties=FALSE, replace=FALSE, estimand='ATT', data = subset(rdwv4ana4_dm,primi==0))
rr <- Match( Tr=Tr, Z=ps, M=1,  replace=FALSE, estimand='ATT')
rr <- Match( Tr=Tr, ps, M=1,  replace=FALSE, estimand='ATT')
x<-ps
X<- ps
rr <- Match( Tr=Tr, X, M=1,  replace=FALSE, estimand='ATT')
rr <- Match( Y=Y, Tr=Tr, X=ps, M=1,  replace=FALSE, estimand='ATT')
> library(MatchIt)> data(lalonde)
library(MatchIt)data(lalonde)
data(lalonde)
library(MatchIt)
data(lalonde)
m.out <- matchit(treat ~ educ + black + hispan, data = lalonde,                 method = "exact")
m.out <- matchit(treat ~ educ + black + hispan, data = lalonde, method = "exact")
## Using logistic regression for estimating propensity scores
lalonde.formu <- treat ~ age+ educ + black + hisp + married + nodegr + re74 + re75
lalonde.glm <- glm(lalonde.formu, family=binomial, data=lalonde)
summary(lalonde.glm)
# try the stepAIC in the MASS package
?stepAIC
ps <- fitted(lalonde.glm)  # Propensity scores
Y  <- lalonde$re78  # Dependent variable, real earnings in 1978
Tr <- lalonde$treat # Treatment indicator
## Matching
# one-to-one matching with replacement (the "M=1" option).
# Estimating the treatment effect on the treated (default is ATT).
rr <- Match(Y=Y, Tr=Tr, X=ps, M=1, ties=FALSE, replace=FALSE, estimand='ATT')
summary(rr) # The default estimate is ATT here
data(rdwv4ana4_dm)
load("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
data(rdwv4ana4_dm)
data<-read.table(rdwv4ana4_dm)
data<-read.table("rdwv4ana4_dm")
data<-read.table("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
rdw_incl<-subset(primi==0)
rdw_incl<-subset(data=data, primi==0)
data<-read.rdata("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
data<-read.rdat("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
data<-read("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
data<-read.dta("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
data<-read.data("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
data<-read.rd("~/Documents/SkyDrive/Baqui_HFS/DM_working/rdwv4ana4_dm.rdata")
ls(sortdata)
ls()
library(lme4)
library(lme4)Loading required package: Matrix Loading required package: lattice
install.packages("lme4")
library(lme4)
load(lme4)
library(lme4)
nullmodel <- lmer(preterm_bth ~ (1 | vill), data = rdwv4ana4_dm, REML = FALSE)
summary(nullmode)
summary(nullmodel)
nullmodel <- lmer(preterm_bth ~ (1 | union), data = rdwv4ana4_dm, REML = FALSE)
nullmodel <- lmer(preterm_bth ~ (1 | unions), data = rdwv4ana4_dm, REML = FALSE)
summary(nullmodel)
nullmodel <- lmer(preterm_bth ~ (1 | vill), data = rdwv4ana4_dm, REML = FALSE)
plot(u0tab$u0rank, u0tab$u0, type = "n", xlab = "u_rank", ylab = "conditional modes of r.e. for school_id:_cons")
packageVersion("dplyr")
install.packages("dplyr")
library("dplyr")
swirl()
install.packages("swirl")
install_from_swirl("Data Analysis")
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
select(cran, -(X:size))
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
hist(time)
?Comparison
filter(cran, r_version == "3.0.2", country == "IN")
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country =="US" | country == "IN")
filter(cran, size>100500,r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2<-select(size:ip_id)
cran2<-select(cran,size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
Try arrange(cran2, package, ip_id)
arrange(cran2, package, ip_id)
arrange(cran2, country,desc(r_version), ip_id)
cran3<-select(cran,ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20,size_gb=size_mb/2^10)
mutate(cran3, correct_size=size+1000)
summarize(cran, avg_bytes = mean(size))
install_from_swirl("Regression Models")
swirl()
plot(child ~ parent, galton)
plot(jitter(child,4) ~ parent,galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col='red')
summary(regrline)
regrline <- lm(child ~ parent, galton)
fit <- lm(child ~ parent, galton)
fit$residuals
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic<-fit$coef[1]
ols.slope<-fit$coef[2]
lhs-rhs
all.equal(lhs,rhs)
load("~/Documents/SkyDrive/Data and do.files/jan31_10am_anc_combined.rdata")
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst<-var(est(ols.slope,ols.ic))
all.equal(varChild,(varRes and varEst))
all.equal(varChild,(varRes+varEst))
all.equal(varChild,varEst+varRes)
efit <- lm(accel ~ mag+dist, attenu)
library(swirl)
swirl()
install_from_swirl("R Programming")
swirl()
install.packages("devtools")
library("devtools")
devtools::install_github("plotly/R-api")
# ...
# * DONE (plotly)
library(plotly)
install.packages("plotly")
library(plotly)
devtools::install_github("plotly/R-api")
install.packages("devtools")
library("devtools")
install.packages("devtools")
devtools::install_github("plotly/R-api")
install_github("ropensci/plotly")
library("devtools")
devtools::install_github("plotly/R-api")
install_github("ropensci/plotly")
library(plotly)
response = signup (username = 'awid79', email= 'awid79@gmail.com')
set_credentials_file("awid79", "2o1j9rl46d")
py <- plotly()
trace0 <- list(
x = c(1, 2, 3, 4),
y = c(10, 15, 13, 17)
)
trace1 <- list(
x = c(1, 2, 3, 4),
y = c(16, 5, 11, 9)
)
response <- py$plotly(trace0, trace1, kwargs=list(filename="basic-line", fileopt="overwrite"))
response$url
browseURL(response$url)
Sig=0.05 (Two-tailed)")
legend("topright", title="Power", as.character(p),
fill=colors)
abline(y=130)
abline(a=130,b=0)
abline(a=130,b=0,lab="Present Samplesize")
abline(h=130,v=35)
abline(h=c(130),v=(35))
# range of effectsizes
r <- seq(.1,.5,.05)
nr <- length(r)
# power values
p <- seq(.4,.9,.1)
np <- length(p)
# obtain sample sizes
samsize <- array(numeric(nr*np), dim=c(nr,np))
for (i in 1:np){
for (j in 1:nr){
result <- pwr.2p.test(n = NULL, h = r[j],
sig.level = .05, power = p[i],
alternative = "two.sided")
samsize[j,i] <- ceiling(result$n)
}
}
# set up graph
xrange <- range(r)
yrange <- round(range(samsize))
colors <- rainbow(length(p))
plot(xrange, yrange, type="n",
xlab="Effect Size (h)",
ylab="Sample Size (n)" )
# add power curves
for (i in 1:np){
lines(r, samsize[,i], type="l", lwd=2, col=colors[i])
}
# add annotation (grid lines, title, legend)
abline(v=0, h=seq(0,yrange[2],50), lty=2, col="grey89")
abline(h=0, v=seq(xrange[1],xrange[2],.02), lty=2,
col="grey89")
title("Sample Size Estimation for Correlation Studies\n
Sig=0.05 (Two-tailed)")
legend("topright", title="Power", as.character(p),
fill=colors)
abline(y=65)
# range of effectsizes
r <- seq(.1,.5,.05)
nr <- length(r)
# power values
p <- seq(.4,.9,.1)
np <- length(p)
# obtain sample sizes
samsize <- array(numeric(nr*np), dim=c(nr,np))
for (i in 1:np){
for (j in 1:nr){
result <- pwr.2p.test(n = NULL, h = r[j],
sig.level = .05, power = p[i],
alternative = "two.sided")
samsize[j,i] <- ceiling(result$n)
}
}
# set up graph
xrange <- range(r)
yrange <- round(range(samsize))
colors <- rainbow(length(p))
plot(xrange, yrange, type="n",
xlab="Effect Size (h)",
ylab="Sample Size (n)" )
# add power curves
for (i in 1:np){
lines(r, samsize[,i], type="l", lwd=2, col=colors[i])
}
# add annotation (grid lines, title, legend)
abline(v=0, h=seq(0,yrange[2],50), lty=2, col="grey89")
abline(h=0, v=seq(xrange[1],xrange[2],.02), lty=2,
col="grey89")
title("Sample Size Estimation for Correlation Studies\n
Sig=0.05 (Two-tailed)")
legend("topright", title="Power", as.character(p),
fill=colors)
abline(a=65,b=0)
install.packages("pwr")
library ("pwr")
prob<-matrix(c(0.225,0.125,0.125,0.125,0.16,0.16,0.04,0.04),nrow=2,byrow=TRUE)probES.w2(prob)pwr.chisq.test(w=ES.w2(prob),df=(2-1)*(4-1),N=200)
prob<-matrix(c(0.225,0.125,0.125,0.125,0.16,0.16,0.04,0.04),nrow=2,byrow=TRUE)
prob
prob<-matrix(c(0.75,0.5,0.4,0.3,0.25,0.5,0.6,0.7),nrow=2,byrow=TRUE)
prob
ES.w2(prob)
pwr.chisq.test(w=ES.w2(prob),df=(2-1)*(4-1),N=200).04,0.04),nrow=2,byrow=TRUE)
ES.w2(prob)
pwr.chisq.test(w=ES.w2(prob),df=(2-1)*(4-1),N=1931)
pwr.chisq.test(w = NULL, N = NULL, df = NULL, sig.level = 0.05, power = NULL)
pwr.chisq.test(w = NULL, N = 1931,  sig.level = 0.05, power = .8)
pwr.chisq.test(w = NULL, N = 1931,  sig.level = 0.05, power = 0.8)
pwr.chisq.test(w = NULL, N = 1931,  sig.level = 0.05, power = 0.8)
pwr.chisq.test( N = 1931,  sig.level = 0.05, power = 0.8)
pwr.chisq.test( df=(4-1), N = 1931,  sig.level = 0.05, power = 0.8)
ptab<-cbind(NULL, NULL)
for (i in c(1:4588)){
pwrt<-power.t.test(d=.9,n=c(1:4588),sig.level=.05,type="one.sample",alternative="two.sided")
plot(pwrt$n,pwrt$power,type="b",xlab="sample size",ylab="power")
)
